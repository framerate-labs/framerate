/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as HomeIndexImport } from './routes/home.index'
import { Route as authSignupIndexImport } from './routes/(auth)/signup.index'
import { Route as authLoginIndexImport } from './routes/(auth)/login.index'
import { Route as authSignupVerifyImport } from './routes/(auth)/signup.verify'
import { Route as authLoginVerifyImport } from './routes/(auth)/login.verify'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any)

const authSignupIndexRoute = authSignupIndexImport.update({
  id: '/(auth)/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const authLoginIndexRoute = authLoginIndexImport.update({
  id: '/(auth)/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const authSignupVerifyRoute = authSignupVerifyImport.update({
  id: '/(auth)/signup/verify',
  path: '/signup/verify',
  getParentRoute: () => rootRoute,
} as any)

const authLoginVerifyRoute = authLoginVerifyImport.update({
  id: '/(auth)/login/verify',
  path: '/login/verify',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login/verify': {
      id: '/(auth)/login/verify'
      path: '/login/verify'
      fullPath: '/login/verify'
      preLoaderRoute: typeof authLoginVerifyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup/verify': {
      id: '/(auth)/signup/verify'
      path: '/signup/verify'
      fullPath: '/signup/verify'
      preLoaderRoute: typeof authSignupVerifyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup/': {
      id: '/(auth)/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof HomeIndexRoute
  '/login/verify': typeof authLoginVerifyRoute
  '/signup/verify': typeof authSignupVerifyRoute
  '/login': typeof authLoginIndexRoute
  '/signup': typeof authSignupIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof HomeIndexRoute
  '/login/verify': typeof authLoginVerifyRoute
  '/signup/verify': typeof authSignupVerifyRoute
  '/login': typeof authLoginIndexRoute
  '/signup': typeof authSignupIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/home/': typeof HomeIndexRoute
  '/(auth)/login/verify': typeof authLoginVerifyRoute
  '/(auth)/signup/verify': typeof authSignupVerifyRoute
  '/(auth)/login/': typeof authLoginIndexRoute
  '/(auth)/signup/': typeof authSignupIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/login/verify'
    | '/signup/verify'
    | '/login'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/home' | '/login/verify' | '/signup/verify' | '/login' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/home/'
    | '/(auth)/login/verify'
    | '/(auth)/signup/verify'
    | '/(auth)/login/'
    | '/(auth)/signup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  authLoginVerifyRoute: typeof authLoginVerifyRoute
  authSignupVerifyRoute: typeof authSignupVerifyRoute
  authLoginIndexRoute: typeof authLoginIndexRoute
  authSignupIndexRoute: typeof authSignupIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  authLoginVerifyRoute: authLoginVerifyRoute,
  authSignupVerifyRoute: authSignupVerifyRoute,
  authLoginIndexRoute: authLoginIndexRoute,
  authSignupIndexRoute: authSignupIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home/",
        "/(auth)/login/verify",
        "/(auth)/signup/verify",
        "/(auth)/login/",
        "/(auth)/signup/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/home/": {
      "filePath": "home.index.tsx"
    },
    "/(auth)/login/verify": {
      "filePath": "(auth)/login.verify.tsx"
    },
    "/(auth)/signup/verify": {
      "filePath": "(auth)/signup.verify.tsx"
    },
    "/(auth)/login/": {
      "filePath": "(auth)/login.index.tsx"
    },
    "/(auth)/signup/": {
      "filePath": "(auth)/signup.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
